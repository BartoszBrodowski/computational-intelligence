2023-03-15 12:47:47,228 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.5}
2023-03-15 12:47:47,268 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.449040523167536e-13, best pos: [-4.79099018e-07  1.23968477e-07]
2023-03-15 12:47:50,979 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
2023-03-15 12:47:50,980 - matplotlib.animation - INFO - MovieWriter._run: running command: convert -size 1000x800 -depth 8 -delay 10.0 -loop 0 rgba:- plot0.gif
2023-03-15 12:48:30,590 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 12:48:30,648 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.594312763154652e-12, best pos: [ 1.87539526e-06 -2.77858559e-07]
2023-03-15 12:48:45,797 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 12:48:45,856 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 5.489373017286849e-12, best pos: [-1.66809189e-06  1.64524845e-06]
2023-03-15 12:49:03,472 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 12:49:03,528 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.486469261064585e-22, best pos: [ 1.48023547e-11 -1.13814420e-11]
2023-03-15 12:49:17,868 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 12:49:17,898 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.3807747849793778e-06, best pos: [-0.00033727  0.00150566]
2023-03-15 12:49:21,632 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
2023-03-15 12:49:21,633 - matplotlib.animation - INFO - MovieWriter._run: running command: convert -size 1000x800 -depth 8 -delay 10.0 -loop 0 rgba:- plot0.gif
2023-03-15 12:49:58,157 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 12:49:58,212 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.008506245459142e-23, best pos: [-1.87104885e-12  2.56597714e-12]
2023-03-15 12:50:04,943 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 12:50:04,977 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.3998708774146738e-07, best pos: [-0.00025527 -0.00027354]
2023-03-15 12:50:08,660 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
2023-03-15 12:50:08,662 - matplotlib.animation - INFO - MovieWriter._run: running command: convert -size 1000x800 -depth 8 -delay 10.0 -loop 0 rgba:- plot0.gif
2023-03-15 12:58:06,128 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 12:58:06,207 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0005549883944570516, best pos: [0.00371132 0.02326402]
2023-03-15 13:00:19,990 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/home/LABPK/bbrodowski/.local/lib/python3.6/site-packages/pyswarms/backend/generators.py", line 82, in generate_swarm
    low=min_bounds, high=max_bounds, size=(n_particles, dimensions)
  File "mtrand.pyx", line 1121, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 541, in numpy.random._common.cont
  File "_common.pyx", line 458, in numpy.random._common.cont_broadcast_2
  File "__init__.pxd", line 741, in numpy.PyArray_MultiIterNew3
ValueError: shape mismatch: objects cannot be broadcast to a single shape
2023-03-15 13:00:41,523 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'cl': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:00:41,532 - pyswarms.backend.operators - ERROR - Missing keyword in swarm.options
Traceback (most recent call last):
  File "/home/LABPK/bbrodowski/.local/lib/python3.6/site-packages/pyswarms/backend/operators.py", line 128, in compute_velocity
    c1 = swarm.options["c1"]
KeyError: 'c1'
2023-03-15 13:00:48,328 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:00:48,714 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 9.49117601299495e-05, best pos: [0.00766942 0.00600764]
2023-03-15 13:01:02,287 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:01:02,708 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0004424337405562821, best pos: [0.01971919 0.00732034]
2023-03-15 13:01:11,049 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:01:11,454 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.00012078864153306857, best pos: [0.00971938 0.00513052]
2023-03-15 13:01:39,567 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 13:01:39,979 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 8.616338809667633e-05, best pos: [0.00420388 0.00827592]
2023-03-15 13:01:44,202 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 13:01:44,582 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0004241048812438698, best pos: [0.0204498  0.00243117]
2023-03-15 13:06:01,650 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 13:34:11,237 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 13:34:11,756 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.6030843586481243, best pos: [1.03649643 1.98288382 1.98446827 1.96240402 1.89099028 1.65926587]
2023-03-15 13:35:04,266 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 13:35:04,779 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.9981806457695117, best pos: [ 1.39004009  1.00054587  1.16362294  1.34464765 -0.58128597 -0.08546157]
2023-03-15 13:35:11,104 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.8}
2023-03-15 13:35:11,626 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.9974129604292212, best pos: [ 1.62307695  1.01077456  1.33255209  1.17877812  1.45970541 -0.04639452]
2023-03-15 13:35:22,443 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:35:22,949 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.999756279681786, best pos: [-0.390984   -0.37148226  1.38545581  1.13377764 -0.02705039 -0.40089334]
2023-03-15 13:36:41,704 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/home/LABPK/bbrodowski/.local/lib/python3.6/site-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-03-15 13:36:55,192 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/home/LABPK/bbrodowski/.local/lib/python3.6/site-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-03-15 13:37:55,838 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:37:56,348 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.8014347536438735, best pos: [0.22088998 0.27761582 0.96760773 0.97563701 0.09033571 0.63997084]
2023-03-15 13:38:12,018 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:38:12,516 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.9070978914279315, best pos: [0.12479536 0.9644471  0.07229809 0.47465995 0.93887696 0.9486194 ]
2023-03-15 13:38:17,289 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:38:17,817 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.02628429352957, best pos: [0.01632394 0.93621308 0.08054581 0.2804844  0.90577475 0.67351796]
2023-03-15 13:38:23,178 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:38:23,691 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.81756364817569, best pos: [0.47002811 0.52938991 0.99020194 0.99747994 0.48919599 0.21589274]
2023-03-15 13:38:27,121 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:38:27,632 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.802703182892259, best pos: [0.59942862 0.54905353 0.96195602 0.97013408 0.04593835 0.60361488]
2023-03-15 13:38:44,428 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-15 13:38:44,949 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.812527262334104, best pos: [0.31506836 0.34358168 0.99164134 0.9778948  0.37044997 0.38076759]
